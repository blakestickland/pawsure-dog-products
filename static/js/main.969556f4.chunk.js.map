{"version":3,"sources":["containers/Home/Home.module.scss","components/BootstrapCarousel/BootstrapCarousel.module.scss","containers/Favorites/Favorites.module.scss","services/firestore.js","services/cart.js","context/Reducers.jsx","services/products.js","context/Context.jsx","components/SearchBar/index.js","components/SearchBar/SearchBar.jsx","components/Nav/index.js","components/Nav/Nav.jsx","containers/Header/index.js","containers/Header/Header.jsx","components/BootstrapCarousel/index.js","components/BootstrapCarousel/BootstrapCarousel.jsx","containers/Home/index.js","containers/Home/Home.jsx","containers/ProductList/ProductList.jsx","containers/ProductList/index.js","containers/Cart/index.js","containers/Cart/Cart.jsx","containers/Product/Product.jsx","containers/Product/index.js","containers/Favorites/index.js","containers/Favorites/Favorites.js","App.js","reportWebVitals.js","index.js","components/Nav/Nav.module.scss","containers/Cart/Cart.module.scss","containers/Header/Header.module.scss","containers/Product/Product.module.scss","components/SearchBar/Searchbar.module.scss"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","cleanRecord","docSnapshot","id","data","getCartItems","a","colRef","collection","get","snapshot","docs","map","createCartItem","item","docRef","doc","set","cartReducer","state","action","type","payload","qty","cart","filter","getProducts","findProduct","docSnap","updateProduct","partial","update","Context","createContext","Provider","children","useState","search","setSearch","useReducer","products","dispatch","populateProducts","console","log","productData","populateCart","cartData","useEffect","value","CartState","useContext","SearchBar","currentInput","setCurrentInput","className","styles","placeholder","onChange","event","target","onClick","preventDefault","to","Navigation","Nav","Navbar","expand","sticky","Link","Brand","Toggle","Collapse","NavDropdown","title","Item","Divider","Header","countCartItems","Container","src","alt","Header__img","Header__Navigation","Header__cartDiv","length","BootstrapCarousel","featuredProducts","product","featured","Carousel","index","interval","image","productName","Caption","Home","ProductCard","toggleFavorite","Card","style","width","Img","variant","height","Body","Title","Text","size","price","toFixed","textDecoration","ToggleButton","checked","favorite","some","p","Button","disabled","stock","ProductList","cartItems","onAdd","onRemove","searchResults","includes","Row","xs","md","lg","Col","Cart","total","setTotal","totalItems","setTotalItems","reduce","acc","curr","parseFloat","sum","parseInt","ListGroup","ListGroupItem","Cart__cartItem","Image","fluid","rounded","padding","Summary","Summary__total","Summary__button","Product","useParams","setProduct","sizeState","setSizeState","priceState","setPriceState","selectedProduct","setSelectedProduct","setShoppingCart","populateProduct","Product__img","Form","Label","column","sm","Product__selector","Select","productType","Favorites","App","setCartItems","exist","find","x","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.969556f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__2by4c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BootstrapCarousel\":\"BootstrapCarousel_BootstrapCarousel__r5Hb0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Favorites\":\"Favorites_Favorites__3_rnd\"};","// Import the function you need from the SDKs you need\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA_bqbDQhB0ceZROkSX76of-5HQxqOiTyI\",\n  authDomain: \"pawsure-firestore.firebaseapp.com\",\n  projectId: \"pawsure-firestore\",\n  storageBucket: \"pawsure-firestore.appspot.com\",\n  messagingSenderId: \"67440175363\",\n  appId: \"1:67440175363:web:a2114a2ba90cc99ee86136\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n// Initialize Firestore\nconst firestore = firebase.firestore();\nexport default firestore;\n","import firestore from \"./firestore\";\n\n// CRUD items in a database\n\n// READ of CRUD -- ALL RECORDS\n\n// clean a single record,\nconst cleanRecord = (docSnapshot) => ({\n  id: docSnapshot.id,\n  ...docSnapshot.data(),\n});\n\n// clean all records\nconst cleanRecords = (querySnapshot) => {\n    return querySnapshot.docs.map(cleanRecord);\n};\n\n// get all cartItems from firestore\nexport const getCartItems = async () => {\n    // the Firestore Collection reference\n    const colRef = firestore.collection(\"cartItems\");\n    // create a Snapshot\n    const snapshot = await colRef.get();\n\n    return cleanRecords(snapshot);\n};\n\n// CREATE of CRUD\nexport const createCartItem = async (item) => {\n    // store collection reference in a variable\n    const colRef = firestore.collection(\"cartItems\");\n    // store the passed-in item in the document reference\n    const docRef = colRef.doc();\n    await docRef.set(item);\n}\n// UPDATE of CRUD\nexport const updateCartItem = async (id, partial) => {\n    const colRef = firestore.collection(\"cartItems\");\n    const docRef = colRef.doc(id);\n    await docRef.update(partial);\n}\n// DELETE of CRUD\nexport const deleteCartItem = async (id) => {\n    const colRef = firestore.collection(\"cartItems\");\n    const docRef = colRef.doc(id);\n    await docRef.delete();\n}","import { createCartItem, deleteCartItem, updateCartItem } from \"../services/cart\";\n\nexport const cartReducer = (state, action) => {\n        \n    const handleDelete = async (action) => {\n          await deleteCartItem(action.payload.id);\n          console.log(action.payload.id);\n        };\n\n    // const handleIncrease = async (product) => {\n    //   const partial = {\n    //     qty: product.qty + 1,\n    //   };\n    //   await updateCartItem(product.id, partial);\n    //   console.log(`${product.productName} updated in cart`, partial);\n    // };\n\n\n        // const handleSubmit = async () => {\n        //   const partial = {\n        //     qty: qty + 1,\n        //   };\n\n        //   await updateCartItem(item.id, partial);\n        // //   setFirstName(\"\");\n        // //   onSubmit();\n        // };\n\n    switch (action.type) {\n      case \"ADD_TO_CART\":\n        return createCartItem({ ...action.payload, qty: 1 });\n        // return {\n        //   ...state,\n        //   cart: [...state.cart, { ...action.payload, qty: 1 }],\n        // };\n      case \"REMOVE_FROM_CART\":\n        // check to see if item is last item in cart\n        // handleDelete(action);\n        return {\n          ...state,\n          cart: state.cart.filter((item) => item.id !== action.payload.id),\n        };\n      case \"INCREASE_CART_QUANTITY\":\n          // update the current cartItem document\n          //  handleIncrease();\n        return {\n          ...state,\n          cart: state.cart.filter(item =>\n             item.id === action.payload.id ?\n             item.qty = item.qty+1 :\n             item.qty),\n        };\n      case \"DECREASE_CART_QUANTITY\":\n          // update the current cartItem document\n        //   return handleSubmit();\n        return {\n          ...state,\n          cart: state.cart.filter(item =>\n             item.id === action.payload.id ?\n             item.qty = item.qty - 1 :\n             item.qty),\n        };\n      default:\n        return state;\n    }\n}","import firestore from \"./firestore\";\n\n\nconst cleanRecords = (querySnapshot) => {\n  return querySnapshot.docs.map(cleanRecord);\n}\n\n// CRUD\n// Read All-------------\n// get all products from firestore\nexport const getProducts = async () => {\n  // Collection Reference\n  const colRef = firestore.collection(\"products\");\n  // Promise<QuerySnapshot> -> QuerySnapshot\n  const snapshot = await colRef.get();\n\n  // Array<QueryDocumentSnapshot> -> Array(T)\n  return cleanRecords(snapshot);\n};\n\nconst cleanRecord = (docSnapshot) => ({\n  id: docSnapshot.id,\n  ...docSnapshot.data(),\n});\n\n// Read One--------------\n// get a specific product from firestore using an id\nexport const findProduct = async (id) => {\n  // Collection reference\n  const colRef = firestore.collection(\"products\");\n  // DocumentReference\n  const docRef = colRef.doc(id);\n  // Promise<DpcimentSnapshot> -> DocumentSnapshot\n  const docSnap = await docRef.get();\n\n  // T -> Custom Object\n  return cleanRecord(docSnap);\n};\n\n// UPDATE of CRUD\nexport const updateProduct = async (id, partial) => {\n    const colRef = firestore.collection(\"products\");\n    const docRef = colRef.doc(id);\n    await docRef.update(partial);\n}","import { \n    createContext, \n    useState, \n    useEffect,\n    useReducer, \n    useContext \n} \nfrom \"react\";\nimport { cartReducer } from \"./Reducers\";\nimport { getProducts } from \"../services/products\";\nimport { getCartItems } from \"../services/cart\";\n\nexport const Context = createContext();\n\nconst Provider = ({ children }) => {\n    const [search, setSearch] = useState(\"\");\n    // const [myCart, setMyCart] = useState(null);\n    const [state, dispatch] = useReducer(cartReducer, {\n        products: [],\n        cart: [],\n    });\n    \n    const populateProducts = async () => {\n        console.log(\"propProds inside CONTEXT has been trigggered1\");\n        console.log(\"state.products inside CONTEXT\", state.products);\n        const productData = await getProducts();\n        state.products = productData;\n        console.log(\"state.products inside CONTEXT-2\", state.products);\n    };\n\n    const populateCart = async () => {\n      const cartData = await getCartItems();\n      state.cart = cartData;\n    };\n    \n    useEffect(() => {\n      populateProducts();\n      populateCart();\n    }, []);\n\n    const data = { \n        search, \n        setSearch,  \n        // myCart, \n        // setMyCart, \n        state, \n        dispatch, \n        populateProducts,\n        populateCart \n    };\n\n    return (\n        <Context.Provider value={data}>{children}</Context.Provider>\n    );\n};\n\nexport default Provider;\n\nexport const CartState = () => {\n    return useContext(Context);\n}\n","import SearchBar from \"./SearchBar\";\nexport default SearchBar;","import styles from \"./Searchbar.module.scss\";\nimport { useState, useContext } from \"react\";\nimport { Context } from \"../../context/Context.jsx\";\nimport { Link } from \"react-router-dom\";\n\nconst SearchBar = () => {\n    const [currentInput, setCurrentInput] = useState(\"\");\n    const { setSearch } = useContext(Context);\n    \n    const handleChange = (event) => {\n        setCurrentInput(event.target.value);\n        // provide user feedback based on what they are searching\n        // input can be lowercase or uppercase\n        // input can be a number (for price or stock)\n        // only a dollar sign or a decimal place can be used\n        // only a single decimal place can be used\n        // only a single dollar sign\n        // all other symbols will be rejected\n    }\n    \n    const handleClick = (event) => {\n        event.preventDefault();\n        setSearch(currentInput); // sets the search context to the use input;\n        setCurrentInput(\"\");  // resets local state and search bar;\n    }\n\n    return (\n      // <div>\n      //     <input value={currentInput} onChange={handleChange} type=\"text\" />\n      //     <button onClick={handleClick}>Search</button>\n      // </div>\n      //   <div class=\"input-group\">\n      //     <div class=\"form-outline\">\n      //       <input\n      //         // id=\"search-input\"\n      //         type=\"search\"\n      //         id=\"form1\"\n      //         class=\"form-control\"\n      //         value={currentInput}\n      //         onChange={handleChange}\n      //       />\n      //       <label class=\"form-label\" for=\"form1\">\n      //         Search\n      //       </label>\n      //     </div>\n      //     <button\n      //       id=\"search-button\"\n      //       type=\"button\"\n      //       class=\"btn btn-primary\"\n      //       onClick={handleClick}\n      //     >\n      //       <i class=\"fas fa-search\"></i>\n      //     </button>\n      //   </div>\n      <div className={styles.SearchBar}>\n        <form className=\"my-2 my-lg-0 d-flex\">\n            <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            value={currentInput}\n            onChange={handleChange}\n            />\n                <button\n                className=\"btn btn-outline-info my-2 my-sm-0\"\n                type=\"submit\"\n                onClick={handleClick}\n                >\n                <Link to=\"/products\">\n                    <i className=\"fas fa-search\"></i>\n                </Link>\n                </button>\n        </form>\n      </div>\n    );\n};\n\nexport default SearchBar;\n","import Navigation from \"./Nav\";\nexport default Navigation;","import { Link } from \"react-router-dom\";\nimport styles from \"./Nav.module.scss\";\nimport SearchBar from \"../SearchBar\";\n  import {\n    Navbar,\n    Nav,\n    NavDropdown,\n  } from \"react-bootstrap\";\n\n\nconst Navigation = () => {\n    return (\n      <nav className={styles.Nav}>\n        <Navbar expand=\"lg\" sticky=\"top\" className={styles.Navbar}>\n          <Link to=\"/\" className={styles.Link}>\n            <Navbar.Brand>Pawsure</Navbar.Brand>\n          </Link>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <NavDropdown title=\"Products\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item>\n                  <Link to=\"/products\" className={styles.Link}>\n                    Dog treats\n                  </Link>\n                </NavDropdown.Item>\n\n                <NavDropdown.Divider />\n                <Link to=\"/favorites\" className={styles.Link}>\n                    <NavDropdown.Item>Favorite Items</NavDropdown.Item>\n                </Link>\n              </NavDropdown>\n              <Nav.Link>Contact Us</Nav.Link>\n              <Nav.Link>About Us</Nav.Link>\n            </Nav>\n            <SearchBar />\n          </Navbar.Collapse>\n        </Navbar>\n      </nav>\n    );\n}\n\nexport default Navigation;\n","import Header from \"./Header\";\nexport default Header;","import Navigation from \"../../components/Nav\";\nimport styles from \"./Header.module.scss\";\nimport { Link } from \"react-router-dom\";\nimport  Container  from \"react-bootstrap/Container\";\nimport { CartState } from \"../../context/Context\";\n\n\nconst Header = ({ countCartItems }) => {\n\n  const {\n    state: { cart }\n  } = CartState();\n\n  return (\n    <Container>\n      <div className={styles.Header}>\n        <Link to=\"/\">\n          <img\n            src=\"https://firebasestorage.googleapis.com/v0/b/pawsure-firestore.appspot.com/o/images%2Fpawsure_logo.jpeg?alt=media&token=43254094-2228-44e1-9bfb-10acb024d882\"\n            alt=\"Pawsure company logo\"\n            className={styles.Header__img}\n          />\n        </Link>\n        <div className={styles.Header__Navigation}>\n          <Navigation />\n        </div>\n        <div className={styles.Header__cartDiv}>\n          <Link to=\"/cart\">\n            <i className=\"fas fa-shopping-cart fa-lg text-info\"></i>{\" \"}\n            {/* {countCartItems ? (\n              <button className=\"badge\">{countCartItems}</button>\n            ) : (\n              \"\"\n            )} */}\n            {cart.length > 0 ? (\n              <button className=\"badge\">{cart.length}</button>\n            ) : (\n              \"\"\n            )}\n          </Link>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default Header;\n","import BootstrapCarousel from \"./BootstrapCarousel\";\nexport default BootstrapCarousel;","import \"bootstrap/dist/css/bootstrap.css\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport styles from \"./BootstrapCarousel.module.scss\";\n\n\nconst BootstrapCarousel = ({products}) => {\n  // filter out the products for .featured=true\n  // feed the filtered results into the Carousel.\n  // need to wait for products to be returned from API call so, lazy evaluation used.\n  const featuredProducts = (products && products.filter((product) => product.featured));\n  \n\n  return (\n    <Carousel className={styles}>\n      {featuredProducts &&\n        featuredProducts.map((product, index) => (\n          <Carousel.Item interval={2500} key={index}>\n            <img\n              className=\"d-block w-100\"\n              src={product.image}\n              alt={product.productName}\n            />\n            <Carousel.Caption>\n              <h3>{product.productName}</h3>\n              <p>{product.type}</p>\n            </Carousel.Caption>\n          </Carousel.Item>\n        ))}\n    </Carousel>\n  );\n};\n\nexport default BootstrapCarousel;\n","import Home from \"./Home\";\nexport default Home;","import styles from \"./Home.module.scss\";\nimport BootstrapCarousel from \"../../components/BootstrapCarousel\";\nimport { CartState } from \"../../context/Context\";\n\nconst Home = () => {\n  const {\n    state: { products },\n  } = CartState();\n\n  return (\n    <div className={styles}>\n      <BootstrapCarousel products={products}/>\n    </div>\n  );\n}\n\nexport default Home\n","import styles from \"./ProductList.module.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport Card from \"react-bootstrap/Card\";\n\nimport { useContext } from \"react\";\nimport { Context, CartState } from \"../../context/Context\";\n\nimport { updateProduct } from \"../../services/products\";\n\nconst ProductCard = ({ product, toggleFavorite }) => {\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const {\n    state: { cart },\n    dispatch,\n  } = CartState();\n\n  return (\n    <Card\n      className=\"text-center mb-3 rounded shadow-sm\"\n      style={{ width: \"18rem\" }}\n    >\n      <Card.Img variant=\"top\" src={product.image} style={{ height: \"12rem\" }} />\n      <Card.Body>\n        <Card.Title>{product.productName}</Card.Title>\n        <Card.Text>Size: {product.size[0]}</Card.Text>\n        <Card.Text>Price: ${product.price[0].toFixed(2)}</Card.Text>\n        <Card.Text>\n          <Link\n            to={`/products/${product.id}`}\n            style={{ textDecoration: \"none\" }}\n          >\n            More details &gt;\n          </Link>\n        </Card.Text>\n        <ToggleButton\n          className=\"mb-2\"\n          // id=\"toggle-check\"\n          type=\"checkbox\"\n          variant=\"outline-info\"\n          checked={product.favorite}\n          onClick={() => toggleFavorite(product)}\n        >\n          {product.favorite ? \"Favorited\" : \"Add to Favorites\"}\n          {/* Favorite */}\n        </ToggleButton>\n        {cart.some((p) => p.id === product.id) ? (\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={() => {\n              dispatch({\n                type: \"REMOVE_FROM_CART\",\n                payload: product,\n              });\n            }}\n          >\n            Remove from Cart\n          </Button>\n        ) : (\n          <Button\n            variant=\"primary\"\n            size=\"md\"\n            // onClick={() => onAdd(product)}\n            onClick={() => {\n              dispatch({\n                type: \"ADD_TO_CART\",\n                payload: product,\n              });\n            }}\n            className=\"w-100\"\n            disabled={!product.stock} // this will disable the button if no stock left\n          >\n            {!product.stock ? \"Out of Stock\" : \"Add To Cart\"}\n          </Button>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst ProductList = ({ cartItems, onAdd, onRemove }) => {\n  const { search } = useContext(Context);\n  const {\n    state: { products, cart },\n    populateProducts,\n  } = CartState();\n\n  console.log(\"products in ProducList.jsx functional component: \", products);\n  console.log(\"cart in ProducList.jsx functional component: \", cart);\n\n  const searchResults = products.filter((product) =>\n    product.productName.includes(search)\n  );\n\n  // const populateProducts = async () => {\n  //   const productData = await getProducts();\n  //   state.products = productData;\n  // };\n\n  // Toggle Favorite -- this updates the favorite field but does not re-render page\n  const toggleFavorite = async (product) => {\n    const partial = {\n      favorite: !product.favorite,\n    };\n    await updateProduct(product.id, partial);\n    populateProducts();\n  };\n\n  return (\n    <Container className={styles.ProductList}>\n      <div>\n        <Row xs={1} md={2} lg={3} className=\"mb-4\">\n          {searchResults &&\n            searchResults.map((product, index) => (\n              <Col key={index} className=\"d-flex justify-content-around\">\n                <ProductCard\n                  product={product}\n                  key={product.id}\n                  onAdd={onAdd}\n                  toggleFavorite={toggleFavorite}\n                  // populateProducts={populateProducts}\n                />\n              </Col>\n            ))}\n        </Row>\n      </div>\n    </Container>\n  );\n};\n\nexport default ProductList;\n","import ProductList from \"./ProductList\";\nexport default ProductList;","import Cart from \"./Cart\";\nexport default Cart;","import styles from \"./Cart.module.scss\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport { Image, ListGroup, ListGroupItem, Col, Row } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { CartState } from \"../../context/Context\";\n\nconst Cart = () => {\n    const { state: { cart }, dispatch } = CartState();\n    const [total, setTotal] = useState();\n    const [totalItems, setTotalItems] = useState();\n\n    useEffect(() => {\n      setTotal(cart.reduce((acc, curr) => acc + parseFloat(curr.price) * curr.qty, 0).toFixed(2));\n      setTotalItems(cart.reduce((sum, item) => sum + parseInt(item.qty), 0));\n    }, [cart]);\n    \n    return (\n      <Container className=\"d-flex\">\n        <div className={styles.Cart}>\n          <ListGroup>\n            {cart.length > 0 ? (\n              <>\n                {cart.map((item) => (\n                  <ListGroupItem\n                    className={styles.Cart__cartItem}\n                    key={item.id}\n                  >\n                    <Row>\n                      <Col md={2} className=\"my-auto\">\n                        <Image\n                          src={item.image}\n                          alt={item.productName}\n                          fluid\n                          rounded\n                        />\n                      </Col>\n                      <Col md={2} className=\"my-auto\">\n                        <span>{item.productName}</span>\n                      </Col>\n                      <Col md={2} className=\"my-auto\">\n                        <span>${item.price[0].toFixed(2)}</span>\n                      </Col>\n                      <Col md={2} className=\"my-auto\">\n                        <span>Size: {item.size[0]}</span>\n                      </Col>\n                      <Col md={2} className=\"my-auto\">\n                        <p>Availble: {item.stock - item.qty}</p>\n                        <p>Stock: {item.stock}</p>\n                      </Col>\n                      <Col md={2} className=\"my-auto\">\n                        <span>\n                          <p>Quantity: {item.qty}</p>\n                          <div>\n                            <Button\n                              variant=\"secondary\"\n                              className=\"increase mx-1\"\n                              onClick={() =>\n                                dispatch({\n                                  type: \"INCREASE_CART_QUANTITY\",\n                                  payload: {\n                                    id: item.id,\n                                    qty: 1,\n                                  },\n                                })\n                              }\n                            >\n                              +\n                            </Button>\n                            <Button\n                              variant=\"secondary\"\n                              className=\"decrease mx-1\"\n                              onClick={() =>\n                                dispatch({\n                                  type: \"DECREASE_CART_QUANTITY\",\n                                  payload: {\n                                    id: item.id,\n                                    qty: 1,\n                                  },\n                                })\n                              }\n                            >\n                              -\n                            </Button>\n                          </div>\n                          <div>\n                            {/* {item.qty} x ${item.price.toFixed(2)} */}\n                          </div>\n                        </span>\n                      </Col>\n                    </Row>\n                  </ListGroupItem>\n                ))}\n              </>\n            ) : (\n              <span style={{ padding: 10 }}>Cart is Empty</span>\n            )}\n          </ListGroup>\n        </div>\n        <div className={styles.Summary}>\n          <h2>Cart Summary</h2>\n          <span className=\"title\">Subtotal ({ totalItems }) items</span>\n          <span className={styles.Summary__total}>Total: $ {total}</span>\n          <Button\n            className={styles.Summary__button}\n            type=\"button\"\n            disabled={cart.length === 0}\n          >\n            Proceed to Checkout\n          </Button>\n        </div>\n      </Container>\n    );\n}\n\nexport default Cart\n","import style from \"./Product.module.scss\";\nimport { useParams } from \"react-router\"; // This might be \"react-router-dom\"\nimport { getCartItems, createCartItem, updateCartItem } from \"../../services/cart\";\n\nimport { findProduct, updateProduct } from \"../../services/products\";\nimport Cart from \"../Cart\";\n\nimport { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport { CartState } from \"../../context/Context\";\n\n\n\nconst Product = ({ cartItems, onAdd, onRemove }) => {\n  const { id } = useParams();\n  const [product, setProduct] = useState(null);\n  const [sizeState, setSizeState] = useState(\"small\");\n  const [priceState, setPriceState] = useState(null);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [shoppingCart, setShoppingCart] = useState(null);\n  const {\n    state: { products, cart },\n  } = CartState();\n\n\n  // const product = products.find((product) => {\n  //     return product.id === parseInt(id);\n  // })\n  const populateCart = async () => {\n    const cartData = await getCartItems();\n    setShoppingCart(cartData);\n    console.log(\"run this first, cartData\", cartData)\n  }\n\n  // updates the selectedProduct state;\n  const populateProduct = async () => {\n    const data = await findProduct(id);\n    setProduct(data);\n    // setSelectedProduct({ ...data, size: data.size[0], price: data.price[0] });\n    // setPriceState(data.price[0].toFixed(2));\n  };\n  \n  useEffect(() => {\n    populateProduct();\n    populateCart();\n  }, [id]);\n  \n  // changes the price when the user changes size on the dropdown menu;\n  useEffect(() => {\n    if (selectedProduct) {\n      switch (sizeState) {\n        case product.size[0]:\n          setPriceState(product.price[0].toFixed(2));\n          setSelectedProduct({\n            ...selectedProduct,\n            size: sizeState,\n            price: product.price[0],\n          });\n          break;\n        case product.size[1]:\n          setPriceState(product.price[1].toFixed(2));\n          setSelectedProduct({\n            ...selectedProduct,\n            size: sizeState,\n            price: product.price[1],\n          });\n          break;\n        case product.size[2]:\n          setPriceState(product.price[2].toFixed(2));\n          setSelectedProduct({\n            ...selectedProduct,\n            size: sizeState,\n            price: product.price[2],\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, [sizeState, product]);\n\n  if (!product) {\n    return <h2>Product with Id: {id} not found.</h2>;\n  }\n\n  const handleSizeStateSelection = (event) => {\n    event.preventDefault();\n    setSizeState(event.target.value);\n  };\n  // ------------------------------------------------------\n\n  const handleAddToCart = async (product) => {\n    \n    console.log(\"shoppingCart at start of handleAddToCart\", shoppingCart);\n    // check to see if the item (being added to cart) is already in cart\n    const exist = await shoppingCart.find((x) => x.id === product.id);\n    console.log(\"exist, handleAddToCart in Product\", exist);\n    // if item exists in cart, map through, find it add 1 to qty via UPDATE;\n    if (exist) {\n      console.log(\"shopponCart\", shoppingCart);\n        shoppingCart.map((x) =>\n          x.id === product.id ? updateCartItem(x.id, { qty: exist.qty + 1 }) : x\n        );\n    } else {\n      // or if it does not exist in cart yet, add the item with a qty of 1;\n      await createCartItem({ ...product, qty: 1 });\n      populateCart();\n      }\n    };\n\n  // const addToCart = (product) => {\n  //   // check to see if the item (being added to cart) is already in cart\n  //   const exist = cartItems.find((x) => x.id === product.id);\n  //   // if item exists in cart, map through and add 1 to qty;\n  //   if (exist) {\n  //     createCartItem(\n  //       cartItems.map((x) =>\n  //         x.id === product.id ? { ...exist, qty: exist.qty + 1 } : x\n  //       )\n  //     );\n  //   } else {\n  //     // or if it does not exist in cart yet, add the item with a qty of 1;\n  //     createCartItem([...cartItems, { ...product, qty: 1 }]);\n  //   }\n  // };\n  // const onAdd = (product) => {\n  //   const exist = cartItems.find((x) => x.id === product.id);\n  //   if (exist) {\n  //     setCartItems(\n  //       cartItems.map((x) =>\n  //         x.id === product.id ? { ...exist, qty: exist.qty + 1 } : x\n  //       )\n  //     );\n  //   } else {\n  //     setCartItems([...cartItems, { ...product, qty: 1 }]);\n  //   }\n  // };\n  // taken from <Button> property:  onClick={() => onAdd(selectedProduct)}\n  // also removed onAdd from being received as a prop in function declaration\n\n  // Toggle Favorite\n  const toggleFavorite = async (product) => {\n    const partial = {\n      favorite: !product.favorite,\n    };\n    await updateProduct(product.id, partial);\n    populateProduct();\n  };\n\n  return (\n    <>\n      <Container className={style.Product}>\n        <img\n          src={product.image}\n          alt={product.productName}\n          width=\"100%\"\n          height=\"300px\"\n          className={style.Product__img}\n        />\n        <h2>{product.productName}</h2>\n        <div>\n          <Row className=\"mb-2\">\n            <Col className=\"d-flex justify-content-center\">\n              <Form.Label column sm=\"2\" className=\"px-3\">\n                Size:\n              </Form.Label>\n              <div className={style.Product__selector}>\n                <Form.Select\n                  aria-label=\"Select size of product\"\n                  onChange={handleSizeStateSelection}\n                >\n                  {product.size &&\n                    product.size.map((size, index) => (\n                      <option value={size} key={index}>\n                        {size}\n                      </option>\n                    ))}\n                </Form.Select>\n              </div>\n            </Col>\n          </Row>\n        </div>\n        <p>Price: ${priceState}</p>\n        <p>Type: {product.productType}</p>\n        <p>Stock Amount: {product.stock}</p>\n        <ToggleButton\n          className=\"mb-2\"\n          // id=\"toggle-check\"\n          type=\"checkbox\"\n          variant=\"outline-success\"\n          checked={product.favorite}\n          onClick={() => toggleFavorite(product)}\n        >\n          {product.favorite ? \"Favorited\" : \"Add to Favorites\"}\n        </ToggleButton>\n        <Button\n          variant=\"primary\"\n          size=\"md\"\n          onClick={() => onAdd(selectedProduct)}\n        >\n          Add To Cart\n        </Button>\n      </Container>\n      <Container>\n        {/* <Cart cartItems={cartItems} addToCart={addToCart} onRemove={onRemove} /> */}\n        {/* <Cart cartItems={cartItems} onAdd={onAdd} onRemove={onRemove} /> */}\n      </Container>\n    </>\n  );\n};\n\nexport default Product;\n","import Product from \"./Product\";\nexport default Product;","import Favorites from \"./Favorites\";\nexport default Favorites;","import styles from \"./Favorites.module.scss\";\n\nconst Favorites = () => {\n//   const filteredProducts = products.filter((product) => {\n//       return `${product.productName}\n//           ${product.productType}`\n//           .includes(name);\n//   }).slice(0, limit);\n\n  return (\n    <div className={styles.Favorites}>\n      <h1>Favorite Items</h1>\n    </div>\n  );\n}\n\nexport default Favorites\n","import './App.scss';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Header from './containers/Header';\nimport Home from './containers/Home';\nimport ProductList from './containers/ProductList';\nimport Product from \"./containers/Product\";\nimport Favorites from './containers/Favorites';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getProducts, updateProduct } from \"./services/products\";\nimport Provider from './context/Context';\nimport Cart from './containers/Cart';\n\n\nfunction App() {\n  // When page is loaded, retrieve the Products from Firestore\n  // Store the data in the state \"products\"\n  // Pass the state down the tree for use\n\n  const [products, setProducts] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n\n  // const populateProducts = async () => {\n  //   const data = await getProducts();\n  //   setProducts(data);\n  // };\n\n  // useEffect(() => {\n  //   populateProducts();\n  // }, []);\n\n  const onAdd = (product) => {\n    const exist = cartItems.find((x) => x.id === product.id);\n    if (exist) {\n      setCartItems(\n        cartItems.map((x) =>\n          x.id === product.id ? { ...exist, qty: exist.qty + 1 } : x\n        )\n      );\n    } else {\n      setCartItems([...cartItems, { ...product, qty: 1 }]);\n    }\n  };\n\n  const onRemove = (product) => {\n    const exist = cartItems.find((x) => x.id === product.id);\n    if (exist.qty === 1) {\n      setCartItems(cartItems.filter((x) => x.id !== product.id));\n    } else {\n      setCartItems(\n        cartItems.map((x) =>\n          x.id === product.id ? { ...exist, qty: exist.qty - 1 } : x\n        )\n      );\n    }\n  };\n\n  // Toggle Favorite\n  const toggleFavorite = async (product) => {\n    const partial = {\n      favorite: !product.favorite,\n    };\n    await updateProduct(product.id, partial);\n    // populateProducts();\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Provider>\n          <Header countCartItems={cartItems.length} />\n          <Switch>\n            <Route path=\"/cart\">\n              <Cart />\n            </Route>\n            <Route path=\"/featured\">\n              <Favorites />\n            </Route>\n            <Route path=\"/products/:id\">\n              <Product\n                cartItems={cartItems}\n                onAdd={onAdd}\n                onRemove={onRemove}\n                toggleFavorite={toggleFavorite}\n              />\n            </Route>\n            <Route path=\"/products\">\n              <ProductList\n                products={products}\n                cartItems={cartItems}\n                onAdd={onAdd}\n                onRemove={onRemove}\n                toggleFavorite={toggleFavorite}\n              />\n            </Route>\n            <Route path=\"/\">\n              <Home products={products} />\n            </Route>\n          </Switch>\n        </Provider>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav__ul\":\"Nav_Nav__ul__IPldB\",\"Link\":\"Nav_Link__12cg-\",\"Navbar\":\"Nav_Navbar__2awQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Cart_Container__2i-bu\",\"Cart\":\"Cart_Cart__1jN-D\",\"Cart__cartItem\":\"Cart_Cart__cartItem__QDbgt\",\"Cart__cartItem__img\":\"Cart_Cart__cartItem__img__3A5vp\",\"Cart__cardItem\":\"Cart_Cart__cardItem__V-a2X\",\"Summary\":\"Cart_Summary__2CLMv\",\"Summary__total\":\"Cart_Summary__total__WLGYS\",\"Summary__button\":\"Cart_Summary__button__1OLO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__HQIlZ\",\"Header__img\":\"Header_Header__img__2kc9v\",\"Header__cartDiv\":\"Header_Header__cartDiv__2YgWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Product\":\"Product_Product__2BWh0\",\"Product__selector\":\"Product_Product__selector__3Y3_B\",\"Product__img\":\"Product_Product__img__2ePDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"Searchbar_SearchBar__3OKv2\"};"],"sourceRoot":""}